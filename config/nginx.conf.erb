worker_processes <%= ENV['NGINX_WORKERS'] || 2 %>;
error_log /dev/stdout info;

daemon off;

events {
	use epoll;
	accept_mutex on;
	worker_connections 256;
}

http {
	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	server_tokens off;

	server {
		listen <%= ENV["PORT"] %>;
		server_name <%= ENV["DOMAIN"] %>;

		location / {
			proxy_pass <%= ENV["UPSTREAM_SERVER"] %>;
			proxy_http_version 1.1;
			proxy_buffering off;
		}
		location /<%= ENV["SUBPATH1"] %> {
			proxy_pass <%= ENV["UPSTREAM_SERVER2"] %>;
			proxy_set_header Host $host;
   			proxy_set_header X-Real-IP $remote_addr;
    			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    			proxy_set_header X-Forwarded-Proto $scheme;

			#safe mode
			#allow my.public.ip.here;
			#deny all;
		}


		#This forces HTTPS but we don't want that, we'll stay on port 80 http
		if ($http_x_forwarded_proto != "https") {
		   rewrite ^(.*)$ https://$host$1 permanent;
		 }
	}
	#sv1
	server {
		listen <%= ENV["PORT"] %>;
		server_name <%= ENV["SUBDOMAIN1"] %>;

		location / {
			rewrite ^(.*)$ https://<%= ENV["DOMAIN"] %>/<%= ENV["SUBPATH1"] %>$1 ;

		}

	}

	#sv3
	server {
		listen <%= ENV["PORT"] %>;
		server_name <%= ENV["SUBDOMAIN3"] %>;

		location / {
			proxy_pass <%= ENV["UPSTREAM_SERVER3"] %>;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
        		proxy_set_header Connection "upgrade";
        		proxy_set_header Host $http_host;

        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Proto https;
        		proxy_set_header X-Nginx-Proxy true;

        		proxy_redirect off;

		}
		#This forces HTTPS but we don't want that, we'll stay on port 80 http
			if ($http_x_forwarded_proto != "https") {
		   		rewrite ^(.*)$ https://$host$1 permanent;
		 	}
	}




}
